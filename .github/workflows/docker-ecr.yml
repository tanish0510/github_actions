name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  # Job 1: Build and Push Docker Image to Docker Hub
  build_and_push_dockerhub:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t my-python-app:latest .

      - name : Display images
        run: docker images

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest

  # Job 2: Scan Docker Image with Trivy (pulls from Docker Hub)
  trivy_scan:
    runs-on: ubuntu-latest
    needs: build_and_push_dockerhub  # Ensure this job runs after the build job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Trivy for scanning
      - name: Set up Trivy
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: 'latest'

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull Docker Image from Docker Hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest

      # Scan the image pulled from Docker Hub
      - name: Scan Docker Image with Trivy
        run: |
          trivy image ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest

  # Job 3: Push Docker Image to Amazon ECR (if scan is safe)
  push_ecr:
    runs-on: ubuntu-latest
    needs: trivy_scan  # Ensure this job runs after the scan job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to ECR via Docker
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Tag Docker Image for ECR
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-python-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/git-actions:latest

      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/git-actions:latest
