name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  # Job 1: Build and Tag Docker Image for ECR
  build_and_tag_ecr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t my-python-app:latest .

      - name: Tag Docker Image for ECR
        run: |
          # Tagging the image with ECR repository URL
          docker tag my-python-app:latest ${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/git-actions:latest

      - name: Display images
        run: docker images

  # Job 2: Scan Docker Image with Trivy (using the tagged image from previous job)
  trivy_scan:
   runs-on: ubuntu-latest
   needs: build_and_tag_ecr  # Ensure this job runs after the build and tag job

   steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Trivy for scanning
    - name: Set up Trivy
      uses: aquasecurity/setup-trivy@v0.2.0
      with:
        version: 'latest'

    # Ensure AWS credentials are properly configured for ECR access
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Scan the Docker image that was already tagged for ECR
    - name: Scan Docker Image with Trivy
      run: |
        trivy image ${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/git-actions:latest

  # Job 3: Push Docker Image to Amazon ECR (if the scan is safe)
  push_ecr:
    runs-on: ubuntu-latest
    needs: trivy_scan  # Ensure this job runs after the scan job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Push the image to ECR
      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/git-actions:latest
