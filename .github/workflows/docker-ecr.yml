name: Docker Build, Trivy Scan, and ECR Push

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Build Docker image
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t my-app:latest .
          # Save image to artifact to be used in other jobs
          docker save my-app:latest | gzip > my-app.tar.gz

      - name: Set up Trivy
        run: |
          curl -sfL https://github.com/aquasecurity/trivy/releases/download/v0.21.3/trivy_0.21.3_Linux-64bit.tar.gz | tar xz -C /usr/local/bin

      - name: Run Trivy scan
        run: |
          trivy image --format json -o trivy-report.json my-app:latest

     

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: my-app.tar.gz  # Save image artifact for later use

  # Job 2: Push Docker image to ECR if scan is OK
  push:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image  # Download the image artifact saved in Job 1

      - name: Load Docker image
        run: |
          gunzip -c my-app.tar.gz | docker load  # Load the saved image into Docker

      - name: Login to Amazon ECR
        run: |
           aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # Option 2: Alternatively use the GitHub Action (if above fails)
      # - name: Login to Amazon ECR
      #   uses: aws-actions/amazon-ecr-login@v1
      #   with:
      #     region: ${{ secrets.AWS_REGION }}

      - name: Tag Docker image
        run: |
          docker tag my-app:latest ${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/git-actions:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCESS_KEY_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/git-actions:latest
  # Job 3: Store Trivy scan report as an artifact
  artifact:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Upload Trivy scan report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json
